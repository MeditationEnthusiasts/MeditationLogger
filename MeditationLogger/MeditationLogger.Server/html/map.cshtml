<!DOCTYPE html>
<!--
 Meditation Logger.
 Copyright (C) 2015-2017  Seth Hendrick.

 This program is free software: you can redistribute it and/or modify
 it under the terms of the GNU General Public License as published by
 the Free Software Foundation, either version 3 of the License, or
 (at your option) any later version.

 This program is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 GNU General Public License for more details.

 You should have received a copy of the GNU General Public License
 along with this program.  If not, see <http://www.gnu.org/licenses />.
-->

<!-- Unit Test: map.cshtml -->

<html>
<head>
    <title>Meditation Enthusiasts Logger</title>
    @Html.Raw( Model.CommonHead )
    <link type="text/css" rel="stylesheet" href="css/pure/two-col.css" />
    <link type="text/css" rel="stylesheet" href="css/leaflet.css" />
    <script src="js/leaflet.js"></script>
    <script type="text/javascript">
        window.onload=function()
        {
            // Create Map
            var map = L.map( 'map' ).setView([51.505, -0.09], 13);

            // Pull from the OSM API
            var osmURL = "http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png";

            // In order to use open street map, we need to attribute to it.
            var osmAttrib = 'Map Data &copy; <a href="http://openstreetmap.org/copyright">OpenStreetMap</a> contributors';

            // Create the OSM layer.
            var osm = new L.TileLayer( osmURL, { minZoom: 0, maxZoom: 18, attribution: osmAttrib});

            // Set the map to start at RIT at zoom level 3.
            map.setView(new L.LatLng(43.085, -77.678419), 3);

            // Add the osm layer to the map
            map.addLayer(osm);

            // Create the icon.
            var icon = L.icon({
                iconUrl: "media/marker-icon.png",
                iconSize: [25, 41],
                iconAnchor:[12.5, 41],
                popupAnchor:[0, -30]
            });

            // Insert the data.
            @foreach( var log in @Model.LogBook.Logs )
            {
                if( log.Latitude != null && log.Longitude != null )
                {
                    <text>
                    var markerHTML@(log.Id) = '<div class="left" style="overflow: auto; color: black;">' +
                    '<p><strong>@(log.StartTime.ToLocalTime().ToString( "MM-dd-yyyy HH:mm" ))</strong></p>' +
                    '<p><strong>Duration:</strong> @(log.Duration.TotalMinutes.ToString( "F" )) minutes</p>' +
                    '<p><strong>Technique:</strong> @(log.Technique)</p>' +
                    '<p><strong>Comments:</strong>@(log.Comments.Replace( '\n', ' ' ).Replace( '\r', ' ' ))</p>';

                    var newPopup@(log.Id) = L.popup({maxwidth:500}).setContent(markerHTML@(log.Id));
                    var newMarker@(log.Id) = L.marker([@(log.Latitude), @(log.Longitude)]).setIcon(icon).addTo(map).bindPopup(newPopup@(log.Id));
                    </text>
                }
            }
        }
    </script>
</head>
<body>
    <div id="layout" class="content pure-g">
        @Html.Raw( Model.NavBar )
        <div id="main" class="pure-u-1">
            <h1>The places you have meditated!</h1>
            <noscript><p>Javascript is required... Sorry :(</p></noscript>
            <div class="center" id="map" style="height:500px; padding-right:2em">
            </div>
        </div>
    </div>
</body>
</html>